# Processing PATH and LD_LIBRARY_PATH. Inspired by /etc/profile

if [ -f "${HOME}/.env" ] ; then
  set -a; source "${HOME}/.env" 2>/dev/null; set +a
fi
if [ -f "${HOME}/.env.local" ] ; then
  set -a; source "${HOME}/.env.local" 2>/dev/null; set +a
fi

prepend_path () {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            PATH="$1${PATH:+:$PATH}"
    esac
}

prepend_ld_library_path () {
    case ":$LD_LIBRARY_PATH:" in
        *:"$1":*)
            ;;
        *)
            LD_LIBRARY_PATH="$1${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    esac
}

# Save path before local addition. 
# This is helpful for programs disliking locally polluted PATH like yay: An example being 'PATH=$SYS_PATH yay -Syu --noconfirm'
export SYS_PATH=$PATH

alias yay='PATH=$SYS_PATH yay'

prepend_path "$HOME/.local/bin"
if [ -d "${HOME}/homebrew/" ]; then
  prepend_path "$HOME/homebrew/bin"
  prepend_ld_library_path "$HOME/homebrew/lib"
fi

PROTO_HOME=$HOME/.proto
if [ -d "$PROTO_HOME" ]; then
  prepend_path "$PROTO_HOME/shims:$PROTO_HOME/bin"
fi

if [ -d "$HOME/.npm-global/bin" ]; then
  prepend_path "$HOME/.npm-global/bin"
fi

if [ -d "$HOME/.fzf/bin" ]; then
  prepend_path "$HOME/.fzf/bin"
fi

export PATH
export LD_LIBRARY_PATH

# vim: set filetype=sh
